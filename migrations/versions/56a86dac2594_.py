"""empty message

Revision ID: 56a86dac2594
Revises: 
Create Date: 2018-09-02 11:38:14.746059

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '56a86dac2594'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('catalog',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('parentID', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('content',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('profile',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quiz',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('form_id', sa.String(length=255), nullable=False),
    sa.Column('quiz_type', sa.String(length=255), nullable=False),
    sa.Column('questions', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('raw_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('client_id_question_id', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('form_id')
    )
    op.create_table('segment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('socialnetwork',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('cellphone', sa.BigInteger(), nullable=False),
    sa.Column('password_hash', sa.String(length=64), nullable=True),
    sa.Column('picture', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('birth', sa.DateTime(), nullable=True),
    sa.Column('total_active_points', sa.Numeric(precision=10), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_cellphone'), 'user', ['cellphone'], unique=True)
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=False)
    op.create_table('order',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_user_id'), 'order', ['user_id'], unique=False)
    op.create_table('product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('image', sa.String(length=200), nullable=False),
    sa.Column('campaign', sa.String(length=255), nullable=False),
    sa.Column('sku', sa.String(length=255), nullable=False),
    sa.Column('color', sa.String(length=255), nullable=False),
    sa.Column('promotion', sa.Boolean(), nullable=False),
    sa.Column('catalog_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['catalog_id'], ['catalog.id'], initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_product_catalog_id'), 'product', ['catalog_id'], unique=False)
    op.create_index(op.f('ix_product_category_id'), 'product', ['category_id'], unique=False)
    op.create_table('seller',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('time_investment', sa.Interval(), nullable=False),
    sa.Column('income_from_DS', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('segment_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['segment_id'], ['segment.id'], initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_seller_segment_id'), 'seller', ['segment_id'], unique=False)
    op.create_index(op.f('ix_seller_user_id'), 'seller', ['user_id'], unique=False)
    op.create_table('usersocialnetwork',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('social_network', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_usersocialnetwork_user_id'), 'usersocialnetwork', ['user_id'], unique=False)
    op.create_table('client',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('old_consumer', sa.Boolean(), nullable=False),
    sa.Column('seller_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['seller_id'], ['seller.id'], initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_client_seller_id'), 'client', ['seller_id'], unique=False)
    op.create_index(op.f('ix_client_user_id'), 'client', ['user_id'], unique=False)
    op.create_table('content_products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('content_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['content_id'], ['content.id'], initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('content_id', 'product_id')
    )
    op.create_index(op.f('ix_content_products_content_id'), 'content_products', ['content_id'], unique=False)
    op.create_index(op.f('ix_content_products_product_id'), 'content_products', ['product_id'], unique=False)
    op.create_table('order_products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('user_client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_client_id'], ['user.id'], initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_products_order_id'), 'order_products', ['order_id'], unique=False)
    op.create_index(op.f('ix_order_products_product_id'), 'order_products', ['product_id'], unique=False)
    op.create_index(op.f('ix_order_products_user_client_id'), 'order_products', ['user_client_id'], unique=False)
    op.create_table('productprofileweight',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Float(precision=53), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['profile_id'], ['profile.id'], initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_productprofileweight_product_id'), 'productprofileweight', ['product_id'], unique=False)
    op.create_index(op.f('ix_productprofileweight_profile_id'), 'productprofileweight', ['profile_id'], unique=False)
    op.create_table('seller_catalogs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('seller_id', sa.Integer(), nullable=True),
    sa.Column('catalog_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['catalog_id'], ['catalog.id'], initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['seller_id'], ['seller.id'], initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_seller_catalogs_catalog_id'), 'seller_catalogs', ['catalog_id'], unique=False)
    op.create_index(op.f('ix_seller_catalogs_seller_id'), 'seller_catalogs', ['seller_id'], unique=False)
    op.create_table('somepost',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('seller_id', sa.Integer(), nullable=False),
    sa.Column('shared_content_id', sa.Integer(), nullable=False),
    sa.Column('social_network_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['seller_id'], ['seller.id'], initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['shared_content_id'], ['content.id'], initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['social_network_id'], ['socialnetwork.id'], initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_somepost_seller_id'), 'somepost', ['seller_id'], unique=False)
    op.create_index(op.f('ix_somepost_shared_content_id'), 'somepost', ['shared_content_id'], unique=False)
    op.create_index(op.f('ix_somepost_social_network_id'), 'somepost', ['social_network_id'], unique=False)
    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('type_of_task', sa.String(length=255), nullable=False),
    sa.Column('seller_id', sa.Integer(), nullable=False),
    sa.Column('num_of_clients', sa.Numeric(precision=10), nullable=False),
    sa.Column('done', sa.Boolean(), nullable=False),
    sa.Column('task_description', sa.Text(), nullable=False),
    sa.Column('content_id', sa.Integer(), nullable=False),
    sa.Column('medium_id', sa.Integer(), nullable=False),
    sa.Column('planned_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('excuted_date', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['content_id'], ['content.id'], initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['medium_id'], ['socialnetwork.id'], initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['seller_id'], ['seller.id'], initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_content_id'), 'task', ['content_id'], unique=False)
    op.create_index(op.f('ix_task_medium_id'), 'task', ['medium_id'], unique=False)
    op.create_index(op.f('ix_task_seller_id'), 'task', ['seller_id'], unique=False)
    op.create_table('client_suggestion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('sent', sa.Boolean(), nullable=False),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('text_content', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_client_suggestion_client_id'), 'client_suggestion', ['client_id'], unique=False)
    op.create_index(op.f('ix_client_suggestion_task_id'), 'client_suggestion', ['task_id'], unique=False)
    op.create_table('notification_register',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('seller_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('read', sa.Boolean(), nullable=False),
    sa.Column('notification_description', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['seller_id'], ['seller.id'], initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notification_register_seller_id'), 'notification_register', ['seller_id'], unique=False)
    op.create_index(op.f('ix_notification_register_task_id'), 'notification_register', ['task_id'], unique=False)
    op.create_table('product_suggestion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_product_suggestion_client_id'), 'product_suggestion', ['client_id'], unique=False)
    op.create_index(op.f('ix_product_suggestion_product_id'), 'product_suggestion', ['product_id'], unique=False)
    op.create_table('quizresult',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('time_taken', sa.Interval(), nullable=False),
    sa.Column('network_id', sa.String(length=255), nullable=False),
    sa.Column('answers', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('raw_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('quiz_id', sa.Integer(), nullable=False),
    sa.Column('result_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['quiz_id'], ['quiz.id'], initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['result_id'], ['profile.id'], initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_quizresult_client_id'), 'quizresult', ['client_id'], unique=False)
    op.create_index(op.f('ix_quizresult_quiz_id'), 'quizresult', ['quiz_id'], unique=False)
    op.create_index(op.f('ix_quizresult_result_id'), 'quizresult', ['result_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_quizresult_result_id'), table_name='quizresult')
    op.drop_index(op.f('ix_quizresult_quiz_id'), table_name='quizresult')
    op.drop_index(op.f('ix_quizresult_client_id'), table_name='quizresult')
    op.drop_table('quizresult')
    op.drop_index(op.f('ix_product_suggestion_product_id'), table_name='product_suggestion')
    op.drop_index(op.f('ix_product_suggestion_client_id'), table_name='product_suggestion')
    op.drop_table('product_suggestion')
    op.drop_index(op.f('ix_notification_register_task_id'), table_name='notification_register')
    op.drop_index(op.f('ix_notification_register_seller_id'), table_name='notification_register')
    op.drop_table('notification_register')
    op.drop_index(op.f('ix_client_suggestion_task_id'), table_name='client_suggestion')
    op.drop_index(op.f('ix_client_suggestion_client_id'), table_name='client_suggestion')
    op.drop_table('client_suggestion')
    op.drop_index(op.f('ix_task_seller_id'), table_name='task')
    op.drop_index(op.f('ix_task_medium_id'), table_name='task')
    op.drop_index(op.f('ix_task_content_id'), table_name='task')
    op.drop_table('task')
    op.drop_index(op.f('ix_somepost_social_network_id'), table_name='somepost')
    op.drop_index(op.f('ix_somepost_shared_content_id'), table_name='somepost')
    op.drop_index(op.f('ix_somepost_seller_id'), table_name='somepost')
    op.drop_table('somepost')
    op.drop_index(op.f('ix_seller_catalogs_seller_id'), table_name='seller_catalogs')
    op.drop_index(op.f('ix_seller_catalogs_catalog_id'), table_name='seller_catalogs')
    op.drop_table('seller_catalogs')
    op.drop_index(op.f('ix_productprofileweight_profile_id'), table_name='productprofileweight')
    op.drop_index(op.f('ix_productprofileweight_product_id'), table_name='productprofileweight')
    op.drop_table('productprofileweight')
    op.drop_index(op.f('ix_order_products_user_client_id'), table_name='order_products')
    op.drop_index(op.f('ix_order_products_product_id'), table_name='order_products')
    op.drop_index(op.f('ix_order_products_order_id'), table_name='order_products')
    op.drop_table('order_products')
    op.drop_index(op.f('ix_content_products_product_id'), table_name='content_products')
    op.drop_index(op.f('ix_content_products_content_id'), table_name='content_products')
    op.drop_table('content_products')
    op.drop_index(op.f('ix_client_user_id'), table_name='client')
    op.drop_index(op.f('ix_client_seller_id'), table_name='client')
    op.drop_table('client')
    op.drop_index(op.f('ix_usersocialnetwork_user_id'), table_name='usersocialnetwork')
    op.drop_table('usersocialnetwork')
    op.drop_index(op.f('ix_seller_user_id'), table_name='seller')
    op.drop_index(op.f('ix_seller_segment_id'), table_name='seller')
    op.drop_table('seller')
    op.drop_index(op.f('ix_product_category_id'), table_name='product')
    op.drop_index(op.f('ix_product_catalog_id'), table_name='product')
    op.drop_table('product')
    op.drop_index(op.f('ix_order_user_id'), table_name='order')
    op.drop_table('order')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_index(op.f('ix_user_cellphone'), table_name='user')
    op.drop_table('user')
    op.drop_table('socialnetwork')
    op.drop_table('segment')
    op.drop_table('quiz')
    op.drop_table('profile')
    op.drop_table('content')
    op.drop_table('category')
    op.drop_table('catalog')
    # ### end Alembic commands ###
